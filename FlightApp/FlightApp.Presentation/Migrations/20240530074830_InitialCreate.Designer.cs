// <auto-generated />
using System;
using FlightApp.Data.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightApp.Presentation.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20240530074830_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("FlightAPP.Domain.Entities.FlightEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("TransportId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TransportId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightAPP.Domain.Entities.JourneyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("FlightAPP.Domain.Entities.TransportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FlightCarrier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("FlightEntityJourneyEntity", b =>
                {
                    b.Property<int>("FlightsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JourneysId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FlightsId", "JourneysId");

                    b.HasIndex("JourneysId");

                    b.ToTable("FlightEntityJourneyEntity");
                });

            modelBuilder.Entity("FlightAPP.Domain.Entities.FlightEntity", b =>
                {
                    b.HasOne("FlightAPP.Domain.Entities.TransportEntity", "Transport")
                        .WithMany("Flights")
                        .HasForeignKey("TransportId");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("FlightEntityJourneyEntity", b =>
                {
                    b.HasOne("FlightAPP.Domain.Entities.FlightEntity", null)
                        .WithMany()
                        .HasForeignKey("FlightsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAPP.Domain.Entities.JourneyEntity", null)
                        .WithMany()
                        .HasForeignKey("JourneysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlightAPP.Domain.Entities.TransportEntity", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
